import{_ as t,c as a,a as n,o as s}from"./app-lmuV3LLn.js";const c={};function d(l,e){return s(),a("div",null,e[0]||(e[0]=[n('<h2 id="_1-聚簇索引" tabindex="-1"><a class="header-anchor" href="#_1-聚簇索引"><span>1. 聚簇索引</span></a></h2><p>聚簇索引（Clustered Index），也称聚集索引。</p><p>聚簇索引决定了表中数据的物理存储顺序。表中的数据按照聚簇索引的键值进行排序和存储。</p><p>一张表只能有一个聚簇索引，因为数据只能按照一种顺序存储。</p><p>聚簇索引的叶子节点直接存储数据行，因此查询时可以直接获取数据，无需回表。</p><p>数据按照聚簇索引的键值顺序存储，因此范围查询（如 <code>BETWEEN</code>、<code>&gt;</code>、<code>&lt;</code>）效率较高。</p><p><strong>主键默认是聚簇索引</strong>：在MySQL的InnoDB引擎中，如果没有显式定义聚簇索引，主键会自动成为聚簇索引。 如果没有主键，InnoDB会选择一个唯一的非空索引作为聚簇索引； 如果也没有，则会隐式创建一个隐藏的聚簇索引。</p><p>插入数据时，需要维护数据的物理顺序，可能导致页分裂（Page Split），影响插入性能。</p>',8)]))}const o=t(c,[["render",d],["__file","clustered-index.html.vue"]]),i=JSON.parse('{"path":"/series/tech/database/mysql/clustered-index.html","title":"聚簇索引与非聚簇索引","lang":"en-US","frontmatter":{"title":"聚簇索引与非聚簇索引"},"headers":[{"level":2,"title":"1. 聚簇索引","slug":"_1-聚簇索引","link":"#_1-聚簇索引","children":[]}],"git":{"createdTime":1739512436000,"updatedTime":1748218348000,"contributors":[{"name":"柒月廿三","email":"lxang723@163.com","commits":1}]},"filePathRelative":"series/tech/database/mysql/clustered-index.md"}');export{o as comp,i as data};
