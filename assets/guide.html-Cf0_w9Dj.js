import{_ as r,c as p,b as s,f as e,d as a,e as u,a as l,r as o,o as d}from"./app-CLv9J3Xl.js";const c={},g={href:"https://www.lxang723.blog",target:"_blank",rel:"noopener noreferrer"},m={href:"https://v2.vuepress.vuejs.org/zh/guide/introduction.html",target:"_blank",rel:"noopener noreferrer"},k={href:"https://marketplace.vuejs.press/zh/",target:"_blank",rel:"noopener noreferrer"},b={href:"https://theme-reco.vuejs.press/",target:"_blank",rel:"noopener noreferrer"},v={href:"https://docs.github.com/zh/pages",target:"_blank",rel:"noopener noreferrer"},h={class:"custom-container details"},f={href:"https://v2.vuepress.vuejs.org/zh/guide/deployment.html",target:"_blank",rel:"noopener noreferrer"},w={href:"https://docs.github.com/zh/actions",target:"_blank",rel:"noopener noreferrer"},y={href:"https://docs.github.com/zh/actions/writing-workflows/workflow-syntax-for-github-actions",target:"_blank",rel:"noopener noreferrer"},x={href:"https://docs.github.com/zh/actions/use-cases-and-examples/building-and-testing/building-and-testing-nodejs#installing-dependencies",target:"_blank",rel:"noopener noreferrer"},G={href:"https://docs.github.com/zh/actions/writing-workflows/choosing-what-your-workflow-does/caching-dependencies-to-speed-up-workflows",target:"_blank",rel:"noopener noreferrer"},S={href:"https://www.namesilo.com/",target:"_blank",rel:"noopener noreferrer"},H={href:"https://dash.cloudflare.com/",target:"_blank",rel:"noopener noreferrer"},N={href:"https://zhuanlan.zhihu.com/p/393050270",target:"_blank",rel:"noopener noreferrer"},P={href:"https://xmmblog.com/namesilo-domain-registration/",target:"_blank",rel:"noopener noreferrer"},C={href:"https://www.whatsmydns.net/",target:"_blank",rel:"noopener noreferrer"},A={href:"https://dnschecker.org/",target:"_blank",rel:"noopener noreferrer"},D={href:"https://www.fujieace.com/web/safety/cloudflare-using-tutorials.html",target:"_blank",rel:"noopener noreferrer"},R={href:"https://developers.cloudflare.com/learning-paths/get-started-free/?utm_medium=email&utm_source=transactional&utm_campaign=ca-confirmed-free",target:"_blank",rel:"noopener noreferrer"},T={href:"https://www.namesilo.com/free-logo-maker",target:"_blank",rel:"noopener noreferrer"};function E(V,n){const t=o("ExternalLinkIcon"),i=o("RouteLink");return d(),p("div",null,[s("p",null,[n[1]||(n[1]=e("我的博客地址：")),s("a",g,[n[0]||(n[0]=e("www.lxang723.blog")),a(t)])]),n[37]||(n[37]=s("p",null,"本博客使用 VuePress 2 和 vuepress-reco 2.x 主题搭建，并通过 GitHub Pages 和 GitHub Actions 实现自动化部署。",-1)),n[38]||(n[38]=s("h2",{id:"_1-vuepress-和-reco",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_1-vuepress-和-reco"},[s("span",null,"1. VuePress 和 Reco")])],-1)),s("p",null,[s("a",m,[n[2]||(n[2]=e("VuePress")),a(t)]),n[3]||(n[3]=e(" 是一个以 Markdown 为中心的静态网站生成器。"))]),n[39]||(n[39]=s("p",null,"VuePress 可以将 Markdown 文件编译为 HTML，并且根据 Markdown 文件的相对路径自动生成路由。",-1)),s("p",null,[s("a",k,[n[4]||(n[4]=e("VuePress 市场")),a(t)]),n[6]||(n[6]=e(" 中提供很多插件与主题，")),s("a",b,[n[5]||(n[5]=e("Reco")),a(t)]),n[7]||(n[7]=e(" 则是一款简洁的 vuepress 博客 & 文档 主题。"))]),s("p",null,[n[9]||(n[9]=e("Reco 主题的使用可参考：")),a(i,{to:"/blogs/other/vuepress-reco.html"},{default:u(()=>n[8]||(n[8]=[e("Vuepress-Reco 的使用")])),_:1}),n[10]||(n[10]=e(" 。"))]),n[40]||(n[40]=s("h2",{id:"_2-使用-github-pages-创建个人站点",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_2-使用-github-pages-创建个人站点"},[s("span",null,"2. 使用 GitHub Pages 创建个人站点")])],-1)),n[41]||(n[41]=s("p",null,"GitHub Pages 是通过 GitHub 托管和发布的公共网页。 GitHub Pages 是一项静态站点托管服务，它直接从 GitHub 上的仓库获取 HTML、CSS 和 JavaScript 文件，（可选）通过构建过程运行文件，然后发布网站。",-1)),s("p",null,[s("a",v,[n[11]||(n[11]=e("GitHub Pages 文档")),a(t)])]),s("details",h,[n[15]||(n[15]=l('<summary class="custom-container-title">GitHub Pages 站点的类型</summary><p>GitHub Pages 站点共有三种类型：个人、组织和项目。</p><p><strong>个人站点（用户页面仓库）：</strong> 仓库名称为 <code>&lt;username&gt;.github.io</code> ，对应的访问地址为 <code>http(s)://&lt;username&gt;.github.io</code>。例如：仓库名称为 <code>lxang723.github.io</code> ，则访问地址为 <code>https://lxang723.github.io</code>。</p><p><strong>项目站点（项目页面仓库）：</strong> 仓库名称为 <code>&lt;repository&gt;</code> ，对应的访问地址为 <code>http(s)://&lt;username&gt;.github.io/&lt;repository&gt;</code>。 例如：仓库名称为 <code>blog</code> ，则访问地址为 <code>https://lxang723.github.io/blog</code>，会包含二级目录。</p><p>如果你有购买域名的打算，建议创建个人站点。</p>',5)),s("p",null,[n[13]||(n[13]=e("发布时，站点类型对 .vuepress\\config.ts 中的 base 也会有影响，可参考 ")),s("a",f,[n[12]||(n[12]=e("VuePress 部署")),a(t)]),n[14]||(n[14]=e(" 。"))])]),n[42]||(n[42]=l('<h3 id="_2-1-为站点创建仓库" tabindex="-1"><a class="header-anchor" href="#_2-1-为站点创建仓库"><span>2.1 为站点创建仓库</span></a></h3><ul><li>在任何页面的右上角，点击 <strong>+</strong> 按钮，点击 <code>New repository</code>，新建仓库。</li><li>在 <strong>Repository name</strong> 输入 <code>&lt;username&gt;.github.io</code>。</li><li>选择仓库可见性 <code>Public</code>。</li><li>勾选 <code>Add a README file</code>。（GitHub Pages 将查找 index.html、index.md 或 README.md 文件，作为站点的入口文件）</li><li>点击 <code>Create repository</code>，创建仓库。</li></ul><h3 id="_2-2-创建站点-配置站点的发布源" tabindex="-1"><a class="header-anchor" href="#_2-2-创建站点-配置站点的发布源"><span>2.2 创建站点（配置站点的发布源）</span></a></h3><p>必须先在 GitHub 上有站点的仓库，然后才可创建站点。</p><ul><li>在 <code>&lt;username&gt;.github.io</code> 仓库主页面中，点击 <code>Settings</code>，进入设置页面。</li><li>点击侧边栏 <strong>Code and automation</strong>（代码和自动化）下的 <code>Pages</code>，进入 <strong>GitHub Pages</strong> 配置页面。</li><li><strong>Build and deployment</strong>（构建和部署）的 <strong>Source</strong>（源）下，选择 <code>Deploy from a branch</code> （从分支进行部署）。</li><li><strong>Build and deployment</strong> 的 <strong>Branch</strong>（分支） 选择 <code>main</code>，<strong>folder</strong> 选择 <code>/(root)</code>，点击 Save 。<br> 注：后续使用 GitHub Actions 时，需将发布源切换为 <code>gh-pages</code> 分支。</li><li>点击 <code>Visit site</code>（访问网站）按钮，查看已发布的网站。</li></ul><p>上述操作只是 GitHub Pages 快速入门 。</p><hr><p>经过 2.1 和 2.2 的操作，我们已经可以看到 GitHub Pages 站点的效果了。</p><p><strong>思考：</strong></p><p>假设你已经成功运行了 vuepress-reco 2.x ，现在想要把 vuepress-reco 部署到站点，我们先要执行 <code>npm run build</code> 在 <code>.vuepress/dist</code> 文件夹下生成静态文件， 然后将静态文件上传到站点仓库中。</p><p>同时，我们也想使用这个仓库管理文章和代码，也就是文章和静态文件在同一个仓库。 我们可以使用 <code>main</code> 分支管理文章和代码，再创建一个 <code>gh-pages</code> 分支来存放生成的静态文件，将 <code>gh-pages</code> 分支作为发布源。 这样一来我们每次发布文章时，需要上传到 <code>main</code> 分支，再将静态文件上传到 <code>gh-pages</code> 分支。</p><p>现在，我们需要简化部署流程，使用 GitHub Actions 工作流来构建和部署站点源文件，实现自动化部署。<br> 在对 <code>main</code> 分支进行推送后，自动触发部署任务： 对 <code>main</code> 分支的代码进行 <code>npm install &amp;&amp; npm run build</code>，然后将 <code>.vuepress/dist</code> 文件夹下生成静态文件推送到 <code>gh-pages</code> 分支，发布站点。</p><p>这样一来，每次发布文章时，只需要推送到 <code>main</code> 分支即可，无需手动构建和部署。</p><h2 id="_3-使用-github-actions-自动部署博客" tabindex="-1"><a class="header-anchor" href="#_3-使用-github-actions-自动部署博客"><span>3. 使用 GitHub Actions 自动部署博客</span></a></h2><p>GitHub Actions 是一种持续集成和持续交付 (CI/CD) 平台，可用于自动执行生成、测试和部署管道。 你可以创建工作流，以便在推送更改到存储库时运行测试，或将合并的拉取请求部署到生产环境。</p>',15)),s("p",null,[s("a",w,[n[16]||(n[16]=e("GitHub Actions 文档")),a(t)])]),n[43]||(n[43]=l(`<h3 id="_3-1-创建个人访问令牌" tabindex="-1"><a class="header-anchor" href="#_3-1-创建个人访问令牌"><span>3.1 创建个人访问令牌</span></a></h3><p>创建 Personal access tokens (PAT)。</p><ul><li><strong>登录 GitHub，进入个人设置</strong>： 在右上角点击你的头像，然后选择 <strong>Settings</strong> 进入设置页面。</li><li><strong>进入开发者设置</strong>： 在左侧边栏中，滚动到最底部，点击 <strong>Developer Settings</strong>。</li><li><strong>创建新 Token</strong>： 在开发者设置页面，点击侧边栏 <strong>Personal access tokens</strong>，然后选择 <strong>Tokens (classic)</strong>。 点击右上角的 <code>Generate new token</code> 按钮，选择 <strong>Generate new toke (classic)</strong> 。</li><li><strong>填写 Token 详细信息</strong>：<br><strong>Note</strong>： 为这个 token 添加备注，方便你之后识别。<br><strong>Expiration</strong>： 选择 token 的有效期（可选）。如果你不希望 token 过期，可以选择 No expiration 。<br><strong>Select scopes</strong>： 勾选 <code>repo</code> 和 <code>workflow</code> 权限。</li><li><strong>生成 Token</strong>： 配置完成后，点击 <code>Generate token</code> 按钮生成 token。</li><li><strong>复制 Token</strong>： 生成后，立即复制并保存 token，因为你以后无法查看该 token。如果忘记复制，你只能重新生成一个新的 token。 点击条目进入 <strong>Edit personal access token (classic)</strong> ，点击 <code>Regenerate token</code> 按钮重新生成。</li></ul><h3 id="_3-2-设置仓库秘钥" tabindex="-1"><a class="header-anchor" href="#_3-2-设置仓库秘钥"><span>3.2 设置仓库秘钥</span></a></h3><p>设置 Repository secrets：在 GitHub Actions 中使用 Personal Access Token 。</p><ul><li>在仓库主页面中，点击 Settings &gt; <strong>Secrets and variables</strong> &gt; Actions，然后点击 <code>New repository secret</code> 按钮，添加仓库秘钥。</li><li>设置 <strong>Name</strong> 名称为 <code>ACCESS_TOKEN</code>，然后将生成的 token 粘贴到 <strong>Secret</strong>（修改时值为 Value） 栏中 。</li></ul><h3 id="_3-3-配置工作流权限" tabindex="-1"><a class="header-anchor" href="#_3-3-配置工作流权限"><span>3.3 配置工作流权限</span></a></h3><p>配置 Workflow permissions。</p><ul><li>在仓库主页面中，进入 Settings &gt; <strong>Actions</strong> &gt; General 。</li><li>将 <strong>Workflow permissions</strong> 设置为 <code>Read and write permissions</code>。</li></ul><h3 id="_3-4-编写工作流文件" tabindex="-1"><a class="header-anchor" href="#_3-4-编写工作流文件"><span>3.4 编写工作流文件</span></a></h3><p>在 vuepress-reco 项目根目录下，创建 <code>.github/workflows/deploy.yml</code> 的文件，定义自动部署流程。</p><div class="custom-container info"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">Note</p><p>若要使 GitHub 在存储库中发现任何 GitHub Actions 工作流，必须将工作流文件保存在名为 .github/workflows 的目录中。</p><p>你可以为工作流文件指定所需的任何名称，但必须使用 .yml 或 .yaml 作为文件扩展名。</p></div><details class="custom-container details"><summary class="custom-container-title">我的 deploy.yml</summary><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml" data-title="yml"><pre><code><span class="line"></span>
<span class="line"><span class="token key atrule">name</span><span class="token punctuation">:</span> Deploy VuePress Site</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 触发条件：在 push 到 main  分支后</span></span>
<span class="line"><span class="token key atrule">on</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token key atrule">push</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token key atrule">branches</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token punctuation">-</span> main</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 任务</span></span>
<span class="line"><span class="token key atrule">jobs</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token key atrule">build-and-deploy</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token comment"># 服务器环境：最新版 Ubuntu</span></span>
<span class="line">    <span class="token key atrule">runs-on</span><span class="token punctuation">:</span> ubuntu<span class="token punctuation">-</span>latest</span>
<span class="line">    <span class="token key atrule">steps</span><span class="token punctuation">:</span></span>
<span class="line"></span>
<span class="line">      <span class="token comment"># 拉取代码</span></span>
<span class="line">      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Checkout code</span>
<span class="line">        <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/checkout@v4</span>
<span class="line">        <span class="token key atrule">with</span><span class="token punctuation">:</span></span>
<span class="line">          <span class="token key atrule">fetch-depth</span><span class="token punctuation">:</span> <span class="token number">0</span></span>
<span class="line">      </span>
<span class="line">      <span class="token comment"># 设置 Node.js</span></span>
<span class="line">      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Set up Node.js</span>
<span class="line">        <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/setup<span class="token punctuation">-</span>node@v4</span>
<span class="line">        <span class="token key atrule">with</span><span class="token punctuation">:</span></span>
<span class="line">          <span class="token key atrule">node-version</span><span class="token punctuation">:</span> <span class="token number">20</span></span>
<span class="line">          <span class="token comment"># 启用缓存，加速构建，提高效率</span></span>
<span class="line">          <span class="token key atrule">cache</span><span class="token punctuation">:</span> npm</span>
<span class="line">      </span>
<span class="line">      <span class="token comment"># 可以使用 npm install &amp;&amp; npm run build 将两步合并</span></span>
<span class="line">      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Install dependencies</span>
<span class="line">        <span class="token key atrule">run</span><span class="token punctuation">:</span> npm install</span>
<span class="line">      </span>
<span class="line">      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Build VuePress site</span>
<span class="line">        <span class="token key atrule">run</span><span class="token punctuation">:</span> npm run build</span>
<span class="line"></span>
<span class="line">      <span class="token comment"># 部署到 GitHub Pages</span></span>
<span class="line">      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Deploy to GitHub Pages</span>
<span class="line">        <span class="token key atrule">uses</span><span class="token punctuation">:</span> JamesIves/github<span class="token punctuation">-</span>pages<span class="token punctuation">-</span>deploy<span class="token punctuation">-</span>action@v4</span>
<span class="line">        <span class="token key atrule">with</span><span class="token punctuation">:</span></span>
<span class="line">          <span class="token key atrule">ACCESS_TOKEN</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.ACCESS_TOKEN <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
<span class="line">          <span class="token key atrule">BRANCH</span><span class="token punctuation">:</span> gh<span class="token punctuation">-</span>pages</span>
<span class="line">          <span class="token key atrule">FOLDER</span><span class="token punctuation">:</span> .vuepress/dist</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><p><strong>注意</strong>：<code>cache: npm</code>：可以缓存依赖项来加快工作流运行。 默认情况下，会根据锁定文件（ package-lock.json 或 yarn.lock ）等文件生成唯一的缓存键。 所以项目中的 package-lock.json 需提交到 Git 仓库中。</p>`,14)),s("p",null,[n[20]||(n[20]=s("strong",null,"参考",-1)),n[21]||(n[21]=e("：")),n[22]||(n[22]=s("br",null,null,-1)),s("a",y,[n[17]||(n[17]=e("GitHub Actions 的工作流语法")),a(t)]),n[23]||(n[23]=s("br",null,null,-1)),s("a",x,[n[18]||(n[18]=e("构建和测试 Node.js")),a(t)]),n[24]||(n[24]=s("br",null,null,-1)),s("a",G,[n[19]||(n[19]=e("缓存依赖项以加快工作流程")),a(t)])]),n[44]||(n[44]=s("hr",null,null,-1)),n[45]||(n[45]=s("p",null,[e("完成以上步骤后，每次将文章推送到 "),s("code",null,"main"),e(" 分支，GitHub Actions 会自动触发工作流，构建并部署静态文件到 GitHub Pages。")],-1)),n[46]||(n[46]=s("p",null,[e("可以在仓库主页面的 "),s("code",null,"Actions"),e(" 查看工作流程结果。")],-1)),n[47]||(n[47]=s("h2",{id:"_4-使用自定义域名",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_4-使用自定义域名"},[s("span",null,"4. 使用自定义域名")])],-1)),n[48]||(n[48]=s("p",null,"GitHub Pages 支持使用自定义域名，或者将网站的 URL 根目录从默认值（如 lxang723.github.io）更改为你拥有的任何域名。",-1)),s("p",null,[s("a",S,[n[25]||(n[25]=e("NameSilo")),a(t)]),n[26]||(n[26]=e(" ：是一家提供域名注册、DNS 托管、隐私保护以及其他相关互联网服务的公司。它因其低价、易于使用的控制面板以及免费的隐私保护而受到许多网站管理员和博客主的青睐。"))]),s("p",null,[s("a",H,[n[27]||(n[27]=e("Cloudflare")),a(t)]),n[28]||(n[28]=e(" ：是一个提供内容分发网络（CDN）、网络安全、域名解析（DNS）以及其他互联网基础设施服务的公司。它主要通过提升网站的加载速度、提供 DDoS 防护、增强安全性等功能来帮助网站更高效、更安全地运行。"))]),n[49]||(n[49]=s("p",null,"TODO",-1)),n[50]||(n[50]=s("p",null,"NameSilo 的使用",-1)),n[51]||(n[51]=s("p",null,"Cloudflare 的使用",-1)),n[52]||(n[52]=s("h3",{id:"使用-namesilo-购买和管理域名",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#使用-namesilo-购买和管理域名"},[s("span",null,"使用 NameSilo 购买和管理域名")])],-1)),n[53]||(n[53]=s("p",null,"参考：",-1)),s("ul",null,[s("li",null,[s("a",N,[n[29]||(n[29]=e("Github 部署个人网页 | 自定义域名")),a(t)])]),s("li",null,[s("a",P,[n[30]||(n[30]=e("附优惠码！NameSilo域名购买教程（2025年01月更新）")),a(t)])])]),n[54]||(n[54]=s("p",null,"等待 DNS 生效 DNS 变更通常需要一些时间来传播。",-1)),s("p",null,[n[33]||(n[33]=e("DNS传播检查器 ")),s("a",C,[n[31]||(n[31]=e("DNS Propagation Checker")),a(t)]),s("a",A,[n[32]||(n[32]=e("DNS Checker")),a(t)])]),n[55]||(n[55]=s("h3",{id:"cloudflare",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#cloudflare"},[s("span",null,"Cloudflare")])],-1)),n[56]||(n[56]=s("p",null,"可参考：",-1)),s("ul",null,[s("li",null,[s("a",D,[n[34]||(n[34]=e("Cloudflare使用教程（注册、添加站点、开启CDN、缓存优化设置等）")),a(t)])]),s("li",null,[s("a",R,[n[35]||(n[35]=e("Cloudflare Docs")),a(t)])])]),s("p",null,[s("a",T,[n[36]||(n[36]=e("Free Logo Maker | NameSilo")),a(t)])])])}const z=r(c,[["render",E],["__file","guide.html.vue"]]),M=JSON.parse('{"path":"/blogs/other/guide.html","title":"我的博客搭建之路","lang":"en-US","frontmatter":{"sticky":2,"title":"我的博客搭建之路","date":"2024-11-12T00:00:00.000Z","categories":["其他"],"tags":["博客"]},"headers":[{"level":2,"title":"1. VuePress 和 Reco","slug":"_1-vuepress-和-reco","link":"#_1-vuepress-和-reco","children":[]},{"level":2,"title":"2. 使用 GitHub Pages 创建个人站点","slug":"_2-使用-github-pages-创建个人站点","link":"#_2-使用-github-pages-创建个人站点","children":[{"level":3,"title":"2.1 为站点创建仓库","slug":"_2-1-为站点创建仓库","link":"#_2-1-为站点创建仓库","children":[]},{"level":3,"title":"2.2 创建站点（配置站点的发布源）","slug":"_2-2-创建站点-配置站点的发布源","link":"#_2-2-创建站点-配置站点的发布源","children":[]}]},{"level":2,"title":"3. 使用 GitHub Actions 自动部署博客","slug":"_3-使用-github-actions-自动部署博客","link":"#_3-使用-github-actions-自动部署博客","children":[{"level":3,"title":"3.1 创建个人访问令牌","slug":"_3-1-创建个人访问令牌","link":"#_3-1-创建个人访问令牌","children":[]},{"level":3,"title":"3.2 设置仓库秘钥","slug":"_3-2-设置仓库秘钥","link":"#_3-2-设置仓库秘钥","children":[]},{"level":3,"title":"3.3 配置工作流权限","slug":"_3-3-配置工作流权限","link":"#_3-3-配置工作流权限","children":[]},{"level":3,"title":"3.4 编写工作流文件","slug":"_3-4-编写工作流文件","link":"#_3-4-编写工作流文件","children":[]}]},{"level":2,"title":"4. 使用自定义域名","slug":"_4-使用自定义域名","link":"#_4-使用自定义域名","children":[{"level":3,"title":"使用 NameSilo 购买和管理域名","slug":"使用-namesilo-购买和管理域名","link":"#使用-namesilo-购买和管理域名","children":[]},{"level":3,"title":"Cloudflare","slug":"cloudflare","link":"#cloudflare","children":[]}]}],"git":{"createdTime":1736081154000,"updatedTime":1736232437000,"contributors":[{"name":"柒月廿三","email":"lxang723@163.com","commits":2}]},"filePathRelative":"blogs/other/guide.md"}');export{z as comp,M as data};
