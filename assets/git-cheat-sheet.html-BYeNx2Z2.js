import{_ as l,c as i,b as e,f as a,d as n,a as d,o as r,r as o}from"./app-BLuAdOCx.js";const c="/assets/fatal-DJ-GfLGo.png",p={},h={href:"https://git-scm.com/",target:"_blank",rel:"noopener noreferrer"},g={href:"https://git-scm.com/docs",target:"_blank",rel:"noopener noreferrer"},u={href:"https://training.github.com/downloads/zh_CN/github-git-cheat-sheet/",target:"_blank",rel:"noopener noreferrer"},b={href:"https://ndpsoftware.com/git-cheatsheet.html#loc=stash;",target:"_blank",rel:"noopener noreferrer"},m={href:"https://git-scm.com/docs/git#_git_commands",target:"_blank",rel:"noopener noreferrer"},v={href:"https://git-scm.com/book/zh/v2",target:"_blank",rel:"noopener noreferrer"},f={href:"https://github.com/progit/progit2-zh/releases",target:"_blank",rel:"noopener noreferrer"},k={href:"https://docs.github.com/zh/get-started/getting-started-with-git/set-up-git",target:"_blank",rel:"noopener noreferrer"},x={href:"https://www.geeksforgeeks.org/git-cheat-sheet/",target:"_blank",rel:"noopener noreferrer"};function y(_,t){const s=o("ExternalLinkIcon");return r(),i("div",null,[e("p",null,[e("a",h,[t[0]||(t[0]=a("Git 官方网站")),n(s)])]),e("ul",null,[e("li",null,[e("a",g,[t[1]||(t[1]=a("Reference")),n(s)]),t[5]||(t[5]=e("br",null,null,-1)),t[6]||(t[6]=a(" 快速参考指南：Quick reference guides: ")),e("a",u,[t[2]||(t[2]=a("GitHub Cheat Sheet")),n(s)]),t[7]||(t[7]=a(" | ")),e("a",b,[t[3]||(t[3]=a("Visual Git Cheat Sheet")),n(s)]),t[8]||(t[8]=e("br",null,null,-1)),t[9]||(t[9]=a(" 所有命令的完整列表： ")),e("a",m,[t[4]||(t[4]=a("Complete list of all commands")),n(s)])]),e("li",null,[e("a",v,[t[10]||(t[10]=a("Book")),n(s)]),t[12]||(t[12]=e("br",null,null,-1)),t[13]||(t[13]=a(" 中文版下载：")),e("a",f,[t[11]||(t[11]=a("Releases · progit/progit2-zh: Pro Git 2nd Edition")),n(s)])])]),e("p",null,[e("a",k,[t[14]||(t[14]=a("GitHub 文档")),n(s)]),t[16]||(t[16]=e("br",null,null,-1)),e("a",x,[t[15]||(t[15]=a("GeeksforGeeks Git Cheat Sheet")),n(s)])]),t[17]||(t[17]=d(`<h2 id="设置-git" tabindex="-1"><a class="header-anchor" href="#设置-git"><span>设置 Git</span></a></h2><p>安装完 Git 之后，要做的第一件事就是设置你的用户名和邮件地址。 这一点很重要，因为每一个 Git 提交都会使用这些信息，它们会写入到你的每一次提交中，不可更改：</p><p>对所有本地仓库的用户信息进行配置。<br> 打开Git Bash：</p><h3 id="设置用户名和邮件地址-set-your-username-globally" tabindex="-1"><a class="header-anchor" href="#设置用户名和邮件地址-set-your-username-globally"><span>设置用户名和邮件地址 Set your username globally.</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">git</span> config <span class="token parameter variable">--global</span> user.name <span class="token string">&quot;yourname&quot;</span></span>
<span class="line"><span class="token function">git</span> config <span class="token parameter variable">--global</span> user.email <span class="token string">&quot;youremail@example.com&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>为一个仓库设置 Git 用户名</p><p>确认设置</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">git</span> config <span class="token parameter variable">--global</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="启用彩色命令行输出" tabindex="-1"><a class="header-anchor" href="#启用彩色命令行输出"><span>启用彩色命令行输出</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">git</span> config <span class="token parameter variable">--global</span> color.ui auto</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="启用彩色命令行输出-1" tabindex="-1"><a class="header-anchor" href="#启用彩色命令行输出-1"><span>启用彩色命令行输出</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">git</span> <span class="token builtin class-name">help</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="存储配置" tabindex="-1"><a class="header-anchor" href="#存储配置"><span>存储配置</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">git</span> config <span class="token parameter variable">--global</span> credential.helper store</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>检查配置信息。</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">git config --list</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="仓库" tabindex="-1"><a class="header-anchor" href="#仓库"><span>仓库</span></a></h2><h3 id="创建一个新的本地仓库" tabindex="-1"><a class="header-anchor" href="#创建一个新的本地仓库"><span>创建一个新的本地仓库</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">git</span> init <span class="token operator">&lt;</span>project-name<span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>省略 project-name 则在当前目录创建。</p><h3 id="克隆一个远程仓库" tabindex="-1"><a class="header-anchor" href="#克隆一个远程仓库"><span>克隆一个远程仓库</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">git</span> clone <span class="token operator">&lt;</span>url<span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="修改-git-远程仓库地址" tabindex="-1"><a class="header-anchor" href="#修改-git-远程仓库地址"><span>修改 Git 远程仓库地址：</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">git</span> remote set-url origin <span class="token operator">&lt;</span>新的仓库地址<span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>例如：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">git</span> remote set-url origin https://github.com/username/repository.git</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>这样就更新了远程仓库地址。如果你想查看修改后的地址，可以运行：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">git</span> remote <span class="token parameter variable">-v</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="遇到的问题" tabindex="-1"><a class="header-anchor" href="#遇到的问题"><span>遇到的问题</span></a></h2><p><img src="`+c+`" alt="fatal"></p><p>先尝试 VPN -&gt; 修复无法联网（VPN 停掉了，相关配置重置一下）</p><p>fatal: unable to access &#39;xxx&#39;: Failed to connect to 127.0.0.1 port 10088 after 2121 ms: Could not connect to server</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">git</span> config <span class="token parameter variable">--global</span> <span class="token parameter variable">--unset</span> http.proxy </span>
<span class="line"><span class="token function">git</span> config <span class="token parameter variable">--global</span> <span class="token parameter variable">--unset</span> https.proxy</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>fatal: unable to access &#39;xxx&#39;: OpenSSL SSL_read: SSL_ERROR_SYSCALL, errno 0</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">git</span> config <span class="token parameter variable">--global</span> http.sslVerify <span class="token string">&quot;false&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>fatal: unable to access &#39;xxx&#39;: Failed to connect to github.com port 443 after 21045 ms: Could not connect to server</p><p>设置代理</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">git</span> config <span class="token parameter variable">--global</span> http.proxy <span class="token number">127.0</span>.0.1:10088</span>
<span class="line"><span class="token function">git</span> config <span class="token parameter variable">--global</span> https.proxy <span class="token number">127.0</span>.0.1:10088</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>设置 -&gt; 网络和Internet -&gt; 代理</p><h2 id="将指定的文件添加到暂存区" tabindex="-1"><a class="header-anchor" href="#将指定的文件添加到暂存区"><span>将指定的文件添加到暂存区</span></a></h2><h3 id="添加单个文件" tabindex="-1"><a class="header-anchor" href="#添加单个文件"><span>添加单个文件：</span></a></h3><p>git add &lt;文件路径&gt; ，例如：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">git</span> <span class="token function">add</span> index.html</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="添加多个文件" tabindex="-1"><a class="header-anchor" href="#添加多个文件"><span>添加多个文件</span></a></h3><p>git add &lt;文件路径1&gt; &lt;文件路径2&gt; ... ，例如：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">git</span> <span class="token function">add</span> index.html style.css app.js</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="添加当前目录下的所有文件" tabindex="-1"><a class="header-anchor" href="#添加当前目录下的所有文件"><span>添加当前目录下的所有文件：</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">git</span> <span class="token function">add</span> <span class="token builtin class-name">.</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="添加特定类型的文件" tabindex="-1"><a class="header-anchor" href="#添加特定类型的文件"><span>添加特定类型的文件：</span></a></h3><p>添加特定类型的文件，可以使用通配符。例如，添加所有 .js 文件：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">git</span> <span class="token function">add</span> *.js</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h1 id="git-命令备忘单" tabindex="-1"><a class="header-anchor" href="#git-命令备忘单"><span>Git 命令备忘单</span></a></h1><h2 id="_1-基础命令" tabindex="-1"><a class="header-anchor" href="#_1-基础命令"><span>1. 基础命令</span></a></h2><table><thead><tr><th><strong>命令</strong></th><th><strong>说明</strong></th></tr></thead><tbody><tr><td><code>git init</code></td><td>初始化一个新的 Git 仓库</td></tr><tr><td><code>git clone &lt;repository&gt;</code></td><td>克隆远程仓库到本地</td></tr><tr><td><code>git status</code></td><td>查看当前工作区和暂存区的状态</td></tr><tr><td><code>git add &lt;file&gt;</code></td><td>将文件添加到暂存区</td></tr><tr><td><code>git commit -m &quot;message&quot;</code></td><td>提交暂存区的更改并附带提交信息</td></tr><tr><td><code>git diff</code></td><td>查看工作区和暂存区的差异</td></tr><tr><td><code>git log</code></td><td>查看提交历史</td></tr><tr><td><code>git log --oneline</code></td><td>以简洁的一行形式查看提交历史</td></tr><tr><td><code>git reset &lt;file&gt;</code></td><td>从暂存区移除文件</td></tr><tr><td><code>git reset --hard</code></td><td>重置工作区和暂存区，回退到上一个提交</td></tr></tbody></table><h2 id="_2-分支管理" tabindex="-1"><a class="header-anchor" href="#_2-分支管理"><span>2. 分支管理</span></a></h2><table><thead><tr><th><strong>命令</strong></th><th><strong>说明</strong></th></tr></thead><tbody><tr><td><code>git branch</code></td><td>列出本地所有分支并标记当前分支</td></tr><tr><td><code>git branch &lt;branch-name&gt;</code></td><td>创建一个新分支</td></tr><tr><td><code>git checkout &lt;branch-name&gt;</code></td><td>切换到指定的分支</td></tr><tr><td><code>git checkout -b &lt;branch-name&gt;</code></td><td>创建并切换到一个新分支</td></tr><tr><td><code>git merge &lt;branch-name&gt;</code></td><td>合并指定分支到当前分支</td></tr><tr><td><code>git branch -d &lt;branch-name&gt;</code></td><td>删除本地分支</td></tr><tr><td><code>git branch -D &lt;branch-name&gt;</code></td><td>强制删除本地分支</td></tr><tr><td><code>git rebase &lt;branch-name&gt;</code></td><td>将当前分支的更改应用到指定分支上</td></tr></tbody></table><h2 id="_3-远程仓库操作" tabindex="-1"><a class="header-anchor" href="#_3-远程仓库操作"><span>3. 远程仓库操作</span></a></h2><table><thead><tr><th><strong>命令</strong></th><th><strong>说明</strong></th></tr></thead><tbody><tr><td><code>git remote add &lt;name&gt; &lt;url&gt;</code></td><td>添加一个远程仓库</td></tr><tr><td><code>git remote -v</code></td><td>查看所有远程仓库的 URL</td></tr><tr><td><code>git fetch &lt;remote&gt;</code></td><td>从远程仓库获取最新的分支信息但不合并</td></tr><tr><td><code>git pull &lt;remote&gt; &lt;branch&gt;</code></td><td>从远程仓库拉取并合并指定分支的内容</td></tr><tr><td><code>git push &lt;remote&gt; &lt;branch&gt;</code></td><td>将本地分支推送到远程仓库</td></tr><tr><td><code>git push --set-upstream &lt;remote&gt; &lt;branch&gt;</code></td><td>设置默认的远程分支</td></tr><tr><td><code>git push &lt;remote&gt; --delete &lt;branch&gt;</code></td><td>删除远程分支</td></tr><tr><td><code>git pull --rebase</code></td><td>拉取远程分支并在本地进行变基操作</td></tr></tbody></table><h2 id="_4-标签管理" tabindex="-1"><a class="header-anchor" href="#_4-标签管理"><span>4. 标签管理</span></a></h2><table><thead><tr><th><strong>命令</strong></th><th><strong>说明</strong></th></tr></thead><tbody><tr><td><code>git tag</code></td><td>列出所有标签</td></tr><tr><td><code>git tag &lt;tag-name&gt;</code></td><td>创建一个新标签</td></tr><tr><td><code>git push &lt;remote&gt; &lt;tag-name&gt;</code></td><td>将标签推送到远程仓库</td></tr><tr><td><code>git tag -d &lt;tag-name&gt;</code></td><td>删除本地标签</td></tr></tbody></table><h2 id="_5-撤销更改" tabindex="-1"><a class="header-anchor" href="#_5-撤销更改"><span>5. 撤销更改</span></a></h2><table><thead><tr><th><strong>命令</strong></th><th><strong>说明</strong></th></tr></thead><tbody><tr><td><code>git checkout -- &lt;file&gt;</code></td><td>恢复文件到最后一次提交的状态（撤销工作区更改）</td></tr><tr><td><code>git reset &lt;file&gt;</code></td><td>从暂存区移除文件</td></tr><tr><td><code>git revert &lt;commit-id&gt;</code></td><td>撤销某个提交，并生成一个新的提交</td></tr></tbody></table><h2 id="_6-git-配置" tabindex="-1"><a class="header-anchor" href="#_6-git-配置"><span>6. Git 配置</span></a></h2><table><thead><tr><th><strong>命令</strong></th><th><strong>说明</strong></th></tr></thead><tbody><tr><td><code>git config --global user.name &quot;&lt;name&gt;&quot;</code></td><td>设置全局 Git 用户名</td></tr><tr><td><code>git config --global user.email &quot;&lt;email&gt;&quot;</code></td><td>设置全局 Git 用户邮箱</td></tr><tr><td><code>git config --list</code></td><td>查看所有 Git 配置项</td></tr></tbody></table><h2 id="_7-合并冲突" tabindex="-1"><a class="header-anchor" href="#_7-合并冲突"><span>7. 合并冲突</span></a></h2><table><thead><tr><th><strong>命令</strong></th><th><strong>说明</strong></th></tr></thead><tbody><tr><td><code>git mergetool</code></td><td>启动合并工具，帮助解决合并冲突</td></tr><tr><td><code>git merge --abort</code></td><td>中止合并操作，恢复到合并前的状态</td></tr></tbody></table><h2 id="_8-高级命令与技巧" tabindex="-1"><a class="header-anchor" href="#_8-高级命令与技巧"><span>8. 高级命令与技巧</span></a></h2><table><thead><tr><th><strong>命令</strong></th><th><strong>说明</strong></th></tr></thead><tbody><tr><td><code>git cherry-pick &lt;commit-id&gt;</code></td><td>将某个提交应用到当前分支</td></tr><tr><td><code>git bisect</code></td><td>使用二分查找方法定位 bug 引入的提交</td></tr><tr><td><code>git reflog</code></td><td>查看历史引用记录，找回丢失的提交</td></tr><tr><td><code>git stash</code></td><td>暂存当前的工作区更改</td></tr><tr><td><code>git stash apply</code></td><td>恢复最近一次暂存的更改</td></tr><tr><td><code>git stash pop</code></td><td>恢复并删除最近一次暂存的更改</td></tr></tbody></table><h2 id="_9-常见问题与错误解决" tabindex="-1"><a class="header-anchor" href="#_9-常见问题与错误解决"><span>9. 常见问题与错误解决</span></a></h2><h3 id="如何找回丢失的提交" tabindex="-1"><a class="header-anchor" href="#如何找回丢失的提交"><span>如何找回丢失的提交？</span></a></h3><ul><li>使用 <code>git reflog</code> 查找丢失的提交。</li><li>使用 <code>git reset --hard &lt;commit-id&gt;</code> 恢复到丢失的提交。</li><li>使用 <code>git fsck</code> 查找孤立对象。</li></ul><h3 id="如何撤销本地提交但保留更改" tabindex="-1"><a class="header-anchor" href="#如何撤销本地提交但保留更改"><span>如何撤销本地提交但保留更改？</span></a></h3><ul><li>使用 <code>git reset --soft HEAD~1</code> 撤销最近的提交并保留文件的更改。</li></ul><h3 id="如何解决合并冲突" tabindex="-1"><a class="header-anchor" href="#如何解决合并冲突"><span>如何解决合并冲突？</span></a></h3><ul><li>使用 <code>git mergetool</code> 启动合并工具，手动解决冲突并提交。</li><li>如果遇到合并问题，可以使用 <code>git merge --abort</code> 取消合并。</li></ul>`,75))])}const j=l(p,[["render",y],["__file","git-cheat-sheet.html.vue"]]),S=JSON.parse('{"path":"/blogs/tools/git/git-cheat-sheet.html","title":"Git 命令备忘单","lang":"en-US","frontmatter":{"title":"Git 命令备忘单","date":"2019-04-09T00:00:00.000Z","tags":["Git"],"categories":["Tools"]},"headers":[{"level":2,"title":"设置 Git","slug":"设置-git","link":"#设置-git","children":[{"level":3,"title":"设置用户名和邮件地址 Set your username globally.","slug":"设置用户名和邮件地址-set-your-username-globally","link":"#设置用户名和邮件地址-set-your-username-globally","children":[]},{"level":3,"title":"启用彩色命令行输出","slug":"启用彩色命令行输出","link":"#启用彩色命令行输出","children":[]},{"level":3,"title":"启用彩色命令行输出","slug":"启用彩色命令行输出-1","link":"#启用彩色命令行输出-1","children":[]},{"level":3,"title":"存储配置","slug":"存储配置","link":"#存储配置","children":[]}]},{"level":2,"title":"仓库","slug":"仓库","link":"#仓库","children":[{"level":3,"title":"创建一个新的本地仓库","slug":"创建一个新的本地仓库","link":"#创建一个新的本地仓库","children":[]},{"level":3,"title":"克隆一个远程仓库","slug":"克隆一个远程仓库","link":"#克隆一个远程仓库","children":[]},{"level":3,"title":"修改 Git 远程仓库地址：","slug":"修改-git-远程仓库地址","link":"#修改-git-远程仓库地址","children":[]}]},{"level":2,"title":"遇到的问题","slug":"遇到的问题","link":"#遇到的问题","children":[]},{"level":2,"title":"将指定的文件添加到暂存区","slug":"将指定的文件添加到暂存区","link":"#将指定的文件添加到暂存区","children":[{"level":3,"title":"添加单个文件：","slug":"添加单个文件","link":"#添加单个文件","children":[]},{"level":3,"title":"添加多个文件","slug":"添加多个文件","link":"#添加多个文件","children":[]},{"level":3,"title":"添加当前目录下的所有文件：","slug":"添加当前目录下的所有文件","link":"#添加当前目录下的所有文件","children":[]},{"level":3,"title":"添加特定类型的文件：","slug":"添加特定类型的文件","link":"#添加特定类型的文件","children":[]}]},{"level":2,"title":"1. 基础命令","slug":"_1-基础命令","link":"#_1-基础命令","children":[]},{"level":2,"title":"2. 分支管理","slug":"_2-分支管理","link":"#_2-分支管理","children":[]},{"level":2,"title":"3. 远程仓库操作","slug":"_3-远程仓库操作","link":"#_3-远程仓库操作","children":[]},{"level":2,"title":"4. 标签管理","slug":"_4-标签管理","link":"#_4-标签管理","children":[]},{"level":2,"title":"5. 撤销更改","slug":"_5-撤销更改","link":"#_5-撤销更改","children":[]},{"level":2,"title":"6. Git 配置","slug":"_6-git-配置","link":"#_6-git-配置","children":[]},{"level":2,"title":"7. 合并冲突","slug":"_7-合并冲突","link":"#_7-合并冲突","children":[]},{"level":2,"title":"8. 高级命令与技巧","slug":"_8-高级命令与技巧","link":"#_8-高级命令与技巧","children":[]},{"level":2,"title":"9. 常见问题与错误解决","slug":"_9-常见问题与错误解决","link":"#_9-常见问题与错误解决","children":[{"level":3,"title":"如何找回丢失的提交？","slug":"如何找回丢失的提交","link":"#如何找回丢失的提交","children":[]},{"level":3,"title":"如何撤销本地提交但保留更改？","slug":"如何撤销本地提交但保留更改","link":"#如何撤销本地提交但保留更改","children":[]},{"level":3,"title":"如何解决合并冲突？","slug":"如何解决合并冲突","link":"#如何解决合并冲突","children":[]}]}],"git":{"createdTime":1736081154000,"updatedTime":1737171533000,"contributors":[{"name":"柒月廿三","email":"lxang723@163.com","commits":3}]},"filePathRelative":"blogs/tools/git/git-cheat-sheet.md"}');export{j as comp,S as data};
